#!/bin/bash

OPTIND=1
REMOTES=`git remote`
PRUNE="--prune"

while getopts "hgr:" opt; do
    case $opt in
	h) #display help syntax
	    echo "help syntax"
	    exit 0
	    ;;
	g)
	    echo ""
	    echo "Calling git garbage collector"
	    git gc 2>&1 >/dev/null
	   ;;
	r) # replace REMOTES array
	    REMOTES=${OPTARG}
	   ;;
	\?) # Invalid option
            echo "Error: Invalid option"
            exit 0
	    ;;
    esac
done

# strings to ignore
X11_IGNORE="X11 forwarding request failed on channel"
PULL_IGNORE="up-to-date|up to date|FETCH_HEAD|^From|$X11_IGNORE|fatal: couldn't find remote ref|You asked to pull|Because this is not|you must specify"
PUSH_IGNORE="up-to-date|up to date"

# test if we are inside a git repo
if git rev-parse ; then
    # get the current branch name
    BRANCH=`git branch | grep '^*' | sed 's/^\* //'`

    for REMOTE in $REMOTES
    do
	# test if remote is available
	echo -n "$REMOTE "
	if git fetch 2>&1| egrep -v "Fetching|$X11_IGNORE" ; then
	    # sync remote
	    git pull $PRUNE $REMOTE $BRANCH 2>&1 | egrep -v "$PULL_IGNORE|$X11_IGNORE"
	    git push $REMOTE : 2>&1 | egrep -v "$PUSH_IGNORE|$X11_IGNORE"
	    git push --tags $REMOTE 2>&1 | egrep -v "$PUSH_IGNORE|$X11_IGNORE"
	fi
    done
fi
